name: Release
on:
  push:
    branches:
      main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            fetch-depth: 0

      - name: Get last git tag
        id: get_last_tag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT

      - name: Get version from package.json
        id: get_version
        run: |
          cd frontend
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Compare versions and decide to release
        id: check_version
        run: |
          if [ "v${{ steps.get_version.outputs.version }}" = "${{ steps.get_last_tag.outputs.last_tag }}" ]; then
            echo "Versions match, skipping release."
            echo "do_release=false" >> $GITHUB_OUTPUT
          else
            echo "Versions differ, will release."
            echo "do_release=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Git tag
        if: steps.check_version.outputs.do_release == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          VERSION="v${{ steps.get_version.outputs.version }}"
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists, skipping tag creation."
          else
            git tag "$VERSION"
            git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}" "$VERSION"
          fi
